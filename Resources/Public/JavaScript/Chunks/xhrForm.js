"use strict";(self.webpackChunkmailer=self.webpackChunkmailer||[]).push([[314],{992:function(e,r,s){s.r(r),s.d(r,{XhrForm:function(){return t}});class t{xhrUri=null;validClassName="is-valid";errorClassName="is-invalid";errorMessageTag="div";errorMessageClassName="invalid-feedback";constructor(e,r){for(const e in this)e in r&&(this[e]=r[e]);null===this.xhrUri&&(this.xhrUri=e.getAttribute("data-uri-xhr")),this.registerEvents(e)}registerEvents(e){e.addEventListener("submit",(e=>{e.preventDefault(),this.formSubmit(e.target)})),Object.entries({keydown:"input,textarea",change:"select"}).forEach((([r,s])=>e.querySelectorAll(s).forEach((e=>e.addEventListener(r,(e=>this.resetFieldValidationFeedback(e.target)))))))}resetFieldValidationFeedback(e){const r=e.parentNode,s=r.querySelector(this.errorMessageClassName);e.classList.remove(this.errorClassName),e.classList.remove(this.validClassName),s instanceof HTMLElement&&r.removeChild(s)}formSubmit(e){const r=new FormData(e);this.formDisable(e),fetch(this.xhrUri,{method:"POST",body:r}).then((r=>r.json().then((s=>!0===r.ok?("html"in s&&this.handleSuccessResponse(e,s.html),Promise.resolve()):!1===r.ok&&"errors"in s?(this.resetValidationErrors(e),this.handleErrorResponse(e,s.errors),this.formEnable(e),Promise.resolve()):Promise.reject())).catch((()=>Promise.reject(r))))).catch((e=>this.handleRequestError(e)))}handleSuccessResponse(e,r){const s=document.createElement("textarea"),t=document.createElement("div");s.innerHTML=r,t.innerHTML=s.innerText,[...t.childNodes].forEach((r=>e.parentNode.insertBefore(r,e))),e.parentNode.removeChild(e)}handleErrorResponse(e,r){"form"in r&&(e.classList.add(this.errorClassName),e.insertBefore(this.errorMessageFeedbackElement(r.form),e.firstChild)),"field"in r&&Object.entries(r.field).forEach((([r,s])=>{const t=e.querySelector('[name="tx_mailer_form\\[form\\]\\['+r+'\\]"]');0<s.length?(t.classList.add(this.errorClassName),t.parentNode.insertBefore(this.errorMessageFeedbackElement(s),t.nextSibling)):t.classList.add(this.validClassName)}))}handleRequestError(e){console.error(e.statusText),console.debug(e)}resetValidationErrors(e){e.querySelectorAll(":scope > ."+this.errorMessageClassName).forEach((e=>e.parentNode.removeChild(e))),e.classList.remove(this.validClassName),e.classList.remove(this.errorClassName),e.querySelectorAll("."+this.errorClassName).forEach((e=>e.classList.remove(this.errorClassName))),e.querySelectorAll("."+this.errorMessageClassName).forEach((e=>e.parentNode.removeChild(e)))}formDisable(e){e.querySelectorAll("input,textarea,select,button").forEach((e=>e.disabled=!0))}formEnable(e){e.querySelectorAll("input,textarea,select,button").forEach((e=>e.disabled=!1))}errorMessageFeedbackElement(e){const r=document.createElement(this.errorMessageTag);if(r.classList.add(this.errorMessageClassName),1===e.length)r.innerText=e.shift();else{const s=document.createElement("ul");e.forEach((e=>{const r=document.createElement("li");r.innerText=e,s.appendChild(r)})),r.appendChild(s)}return r}}}}]);